
services:
  # Инфраструктура
  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - real_estate_network
    restart: unless-stopped

  mongodb:
    image: mongo:7-jammy
    hostname: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-real_estate_db}
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - real_estate_network
    restart: unless-stopped

  # Основные сервисы на основе ваших существующих Dockerfile
  telegram_bot:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.telegram_bot
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672/}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ./logs:/app/logs
    networks:
      - real_estate_network
    restart: unless-stopped

  parser_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.parser_worker
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672/}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      MAX_RETRIES: ${MAX_RETRIES:-3}
      RETRY_DELAY: ${RETRY_DELAY:-5}
      REQUEST_TIMEOUT: ${REQUEST_TIMEOUT:-30}
    volumes:
      - ./logs:/app/logs
    networks:
      - real_estate_network
    restart: unless-stopped
    deploy:
      replicas: 2

  geo_enrichment_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.geo_enrichment_worker
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672/}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      MAX_RETRIES: ${MAX_RETRIES:-3}
      RETRY_DELAY: ${RETRY_DELAY:-5}
    volumes:
      - ./logs:/app/logs
    networks:
      - real_estate_network
    restart: unless-stopped

  economic_enrichment_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.economic_enrichment_worker
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672/}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      MAX_RETRIES: ${MAX_RETRIES:-3}
      RETRY_DELAY: ${RETRY_DELAY:-5}
    volumes:
      - ./logs:/app/logs
    networks:
      - real_estate_network
    restart: unless-stopped

  db_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.db_worker
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672/}
      MONGO_URI: ${MONGO_URI:-mongodb://mongodb:27017/}
      MONGO_DB_NAME: ${MONGO_DB_NAME:-real_estate_db}
      MONGO_COLLECTION_NAME: ${MONGO_COLLECTION_NAME:-posters}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      MAX_RETRIES: ${MAX_RETRIES:-3}
      RETRY_DELAY: ${RETRY_DELAY:-5}
    volumes:
      - ./logs:/app/logs
    networks:
      - real_estate_network
    restart: unless-stopped

  analysis_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.analysis_worker
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672/}
      MONGO_URI: ${MONGO_URI:-mongodb://mongodb:27017/}
      MONGO_DB_NAME: ${MONGO_DB_NAME:-real_estate_db}
      MONGO_COLLECTION_NAME: ${MONGO_COLLECTION_NAME:-posters}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      MAX_RETRIES: ${MAX_RETRIES:-3}
      RETRY_DELAY: ${RETRY_DELAY:-5}
    volumes:
      - ./logs:/app/logs
    networks:
      - real_estate_network
    restart: unless-stopped

  notification_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.notification_worker
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      AMQP_URL: ${AMQP_URL:-amqp://guest:guest@rabbitmq:5672/}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      MAX_RETRIES: ${MAX_RETRIES:-3}
      RETRY_DELAY: ${RETRY_DELAY:-5}
    volumes:
      - ./logs:/app/logs
    networks:
      - real_estate_network
    restart: unless-stopped

volumes:
  rabbitmq_data:
  mongo_data:
  
networks:
  real_estate_network:
    driver: bridge